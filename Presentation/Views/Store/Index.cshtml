@using Application.DTOs
@using Shared
@model IEnumerable<GetAPIDTOs>
@{
    ViewData["Title"] = "Free API Store";
    ViewData["Footer-fixed"] = false;

}

<div class="row">
    <div class="col-md-2">
        <div class="card">
            <ul class="list-group list-group-flush">
                @foreach (var item in Model)
                {
                    <li class="list-group-item"><strong>@item.GroupBy</strong></li>
                    foreach (var api in item.APIDTOs)
                    {
                        var badge = string.Empty;
                        if (api.Method == enMethodType.Post)
                        {
                            badge = "basge-success";
                        }
                        else if (api.Method == enMethodType.Get)
                        {
                            badge = "basge-primary";
                        }
                        else if (api.Method == enMethodType.Put)
                        {
                            badge = "basge-warning";
                        }
                        else if (api.Method == enMethodType.Delete)
                        {
                            badge = "basge-danger";
                        }
                        <li class="list-group-item"><span class="badge @badge">@api.Method.ToString()</span><a href="?endpoint=@api.UniqueName" class="text-black"> @api.Name</a></li>
                    }
                }
            </ul>
        </div>
    </div>
    <div class="col-md-10">
        <div class="api-box mt-4">
            <span class="badge badge-success">Post</span>
            <span>api/v1/product</span>
        </div>
        <div class="my-2">
            <div class="accordion" id="request">
                <div class="accordion-item">
                    <h2 class="accordion-header">
                        <button class="accordion-button text-black" type="button" data-bs-toggle="collapse" data-bs-target="#collapseRequest" aria-expanded="true" aria-controls="collapseRequest">
                            Request
                        </button>
                    </h2>
                    <div id="collapseRequest" class="accordion-collapse collapse" data-bs-parent="#request">
                        <div class="accordion-body">
                            <div class="request-box">
                                <pre>
fetch('https://fakestoreapi.com/products',{
method:'POST',
body:JSON.stringify(
{
    title: 'test product',
    price: 13.5,
    description: 'lorem ipsum set',
    image: 'https://i.pravatar.cc',
    category: 'electronic'
})})
.then(res => res.json())
.then(json => console.log(json))
            </pre>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div>
            <div class="accordion" id="response">
                <div class="accordion-item">
                    <h2 class="accordion-header">
                        <button class="accordion-button text-black" type="button" data-bs-toggle="collapse" data-bs-target="#collapseResponse" aria-expanded="true" aria-controls="collapseResponse">
                            Response
                        </button>
                    </h2>
                    <div id="collapseResponse" class="accordion-collapse collapse" data-bs-parent="#response">
                        <div class="accordion-body">
                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
