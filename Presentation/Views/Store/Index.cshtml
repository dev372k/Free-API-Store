@using Shared
@using Shared.Statics.Models
@model GetAPIDTO
@{
    ViewData["Title"] = "Free API Store";
    ViewData["Footer-fixed"] = false;

}

<div class="row">
    <div class="col-md-2">
        <div class="card">
            <ul class="list-group list-group-flush">
                @foreach (var item in Model.GetAPIs)
                {
                    <li class="list-group-item"><strong>@item.GroupBy</strong></li>
                    foreach (var api in item.APIs)
                    {
                        var badge = string.Empty;
                        if (api.Method == enMethodType.Post)
                        {
                            badge = "badge-success";
                        }
                        else if (api.Method == enMethodType.Get)
                        {
                            badge = "badge-primary";
                        }
                        else if (api.Method == enMethodType.Put)
                        {
                            badge = "badge-warning";
                        }
                        else if (api.Method == enMethodType.Delete)
                        {
                            badge = "badge-danger";
                        }
                        <li class="list-group-item"><span class="badge @badge">@api.Method.ToString()</span><a href="?endpoint=@api.UniqueName" class="text-black"> @api.Name</a></li>
                    }
                }
            </ul>
        </div>
    </div>
    <div class="col-md-10">
        <div class="api-box mt-4">
            @{
                var badge_color = string.Empty;
                if (Model.API.Method == enMethodType.Post)
                {
                    badge_color = "badge-success";
                }
                else if (Model.API.Method == enMethodType.Get)
                {
                    badge_color = "badge-primary";
                }
                else if (Model.API.Method == enMethodType.Put)
                {
                    badge_color = "badge-warning";
                }
                else if (Model.API.Method == enMethodType.Delete)
                {
                    badge_color = "badge-danger";
                }
                <span class="badge @badge_color">@Model.API.Method.ToString()</span>
            }
            <span>@Model.API.Endpoint</span>
        </div>
        <div class="my-2">
            <div class="accordion" id="request">
                <div class="accordion-item">
                    <h2 class="accordion-header">
                        <button class="accordion-button text-black" type="button" data-bs-toggle="collapse" data-bs-target="#collapseRequest" aria-expanded="true" aria-controls="collapseRequest">
                            Request
                        </button>
                    </h2>
                    <div id="collapseRequest" class="accordion-collapse collapse" data-bs-parent="#request">
                        <div class="accordion-body">
                            <div class="request-box">
                                <pre>
                                    @Model.API.Request
            </pre>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div>
            <div class="accordion" id="response">
                <div class="accordion-item">
                    <h2 class="accordion-header">
                        <button class="accordion-button text-black" type="button" data-bs-toggle="collapse" data-bs-target="#collapseResponse" aria-expanded="true" aria-controls="collapseResponse">
                            Response
                        </button>
                    </h2>
                    <div id="collapseResponse" class="accordion-collapse collapse" data-bs-parent="#response">
                        <div class="accordion-body">
                            @Model.API.Response
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
